


左右脑模式
在这里，我不知道有多少人听过笑来老师讲过学东西，其实有两种模式，一种叫苍蝇模式，一种叫蜜蜂模式。其实我现在讲的东西有异曲同工之妙。左右脑模式、 更精确地说，一般人其实没有意识到，进行一项学习，其实调用的 是两种模式。、 一种叫左脑模式，利用逻辑分析学习、 一种叫右脑学习模式，利用感知学习。为什么在学编程前，我要教各位元学习呢?元学习这个字，意思其实就是学习如何学习再学习。我希望教会各位不只一样技能的学习方式。在这里我要教会你另外一个 技能，这个技能叫做画画。新手如何学画画、 一般来说，画画甚至比编程更难学习。但我在这里要介绍一个在80 年代被发明的学画学习方式，这堂课只要5天，就能够让新手五天学会绘画。我是在一本书上看到的，这本书也推荐大家去买:《像艺术家一样思考》。 这本书的作者叫做 Betty Edwards，他是一位认知学家+画家。 在80年代时，她发明了一个让新手五天学会绘画的方法。这个方法很简单:当中的原理是这样的：就是让新手在刚开始学素描时，倒着画自己的自画像，他发现当学生正着画自己的自画像时，通常会画的七歪扭八。学生因为熟悉自己的样貌，所以作画时会纠结细节，一直想要去修改自己所呈现的容貌。问题是新手又没有足够的绘画技巧，于是就会画得一团糟。但是如果让学生将自己的照片反过来，临墓作画时，这时候突然间他们就会画了。正因为自己都不知道自己在画什么，所以纠结比较的那一个部分会被关掉。反而会把重点放在观察全局与细节。因此倒过来的作品远比正着画的作品水准高上太多。Betty发现的这个现象，正是因为人类的左右脑具有不同的运作模 式。前者注重逻辑分析与细节，后者注重全局观。正着画图，让我们不由自主的在针对自己应该熟悉的部分开启左脑分析模式。但是我们又不具备绘画的功力，导致一直绊倒自己。 他发现用这个方法，就可以让没有受过学习训练的人，直接强制关掉左脑的分析模式，专注在全局。其实学习英语以及编程，也是同样的道理。正因为语言或者是编程内使用的英语单词是我们熟悉的语言，在学习时，学习者会不自主地开启分析模式。去试图找到与过往经验匹配的模式，但是若匹配不到或匹配错误，学习者就会自己绊倒自己。
人人都该用英语、 所以为什么很多网上的学习英语的有效技巧，都要求学习者不要试图去记单词，能够的话，就是大量的去听别人说什么，大量的去模仿说句子、 这其实就是让学习者大量的使用右脑的直觉以及其他身体感觉， 去快速抓到全局感，拼出基础框架。而学英语最有效的方式:甚至是、直接到说英语的地区去居住、 在这样的情境下，学习者可以大量的模仿、大量的使用累积出的简单框架、 在当地生活购物，累积更强的语感与成就感、 大脑无法用未知解释未知、 同样的，编程也是相同的道理。一开始学习编程，初学者甚至不应该尝试着去搞懂里面的用法，因为人类的大脑无法用未知解释未知，就算看了一整天，你也无法用逻辑分析出所以然。学习编程最有效的方式就是冲进度。你只需要知道输入什么能够得出什么就可以了。看着一本小书，用模仿复制代码的方式，快速搭建出一个小项目，建立一个大致全局感。然后，将项目发布，让朋友称赞你，取得有效的成就感，这样就可以激励自己继续学习编程。用这样的方式，你就可以抢在自己放弃之前，建立起正循环了。
为什么要采纳这样的学习方法呢?
一般人学习之所以低效，是因为不了解自己的大脑怎么运作。一旦你开始了解自己的大脑是怎么运作的，很快的，你就会发现学习是有套路的，而且你可以利用这套方法，大幅拉升自己的学习初速度。在这里我先告诉各位五个结论:
大脑并不擅长思考，而且大脑的思考是很缓慢的、
多数的思考，并不是真的思考，而是调用过去记忆所组成的结果
人是利用已知的事务理解新的事物，但理解其实是记忆
没有重复的练习，不可能精通任何脑力活
题海战术以及填鸭教育，有时是必须的

大脑并不善于思考、
在这社会上我们最常嘲讽的一个现象：大多数人是不用脑子思考的。其实这真是事实，你仔细想想，其实大脑真是用来思考的吗?如果你叫大脑随便做一则演算，其实大脑的演算，往往是比我们现在所发明的计算机来说，效率是极其低的。做个7X8的数学还行，但要是改个177X288的快速演算。就瞬间就短路。在这里，我举一个大脑其实不善于思考的例子。
一个空屋子里有一支蜡烛，一些火柴，和一盒图钉。目标是让点燃的蜡烛离地五英尺高，你已经尝试把蜡烛底部沾上蜡液，但还是沾不到墙上，怎样才不用手扶，让点燃的蜡烛离地五英尺高?这一个题目，正常一般人在看到题目后，很少能在2分钟内给出解决答案。但是如果你把这个题目具象化，也就是真的生出这些设备，放在眼前。你就会发现这道题目的答案其实并不难。你只要把图钉倒出来，把盒子用图钉钉在墙壁上，再把蜡烛豁在盒子里，就完成了这个任务。
大脑的，思考特性、
这个例子解释了思考的几个特性。首先，大脑的思考是很缓慢的。接看，思考是很费力的。大脑很难凭空想像出这个场景并运算出解答。甚至可能完全答不出来。但是如果把大脑接上视觉系统与触觉系统。因为视觉系统与触觉系统进行了可靠的回传，大脑实质上是调用了其他地区可用的资源做运算。就能迅速得出答案。那么，既然思考那么费力。我们平时是怎么样不费工夫的做出日常生活中的各样决策?习惯！答案是：习惯。习惯就是我们做过某件事的记忆回路，大脑调用过去的记忆，让身体自动做出判断。所以，在这里，我们要引出今天要介绍的第二条认知学事实：大部分人做的决策，其实真不是基于大脑所做的思考，他们是记忆组成的结果、多数的思考，并不是真的思考，而是调用过去记忆所组成的结果、大脑的运作原理是这样的：接收到环境刺激然后把决策放到工作记忆上。熟练之后烧到长期记忆中(事实性知识、过程性知识)。工作记忆就是我们当前正在意识、思考的工作区域。以计算机比喻，就是电脑的内存。容量小，资料存在时间短， 重开机就不见了。长期记忆就是我们长久以来储存的事实性知识、经验。(以计算机比喻，就是电脑的硬盘。容量大，资料存在时间长， 可以长期复用。而长期以来，我们日常遇到的大量决策，事实上是调用了长期记忆 (经验以及不变的科学事实)，自动完成。而所谓的解题与思考，是复用了短期记忆以及长期记忆而成。比如说以197X288这个例子、7X8是长期记忆，是我们小时候背的九九乘法。接下来我们要算170 " 280。你知道这有多难、 人类几乎很难凭空展开这个算式。 这是因为人类的大脑工作记忆中只能暂时存放结果(对人类无意义的结果)。人类事实上很少在思考，更多的是调用记忆在做决策。 人是利用已知的事务理解新的事物，但理解其实是记忆、 理解其实不是一个调用大脑思考的过程，而是一个匹配记忆的过程。很多行业为什么不喜欢招小白，事实上就是因为小白经验过少，缺乏太多相关记忆，可以直接匹配学习。又或者是为什么一般人难以上手编程，而且对于学习编程，感受到痛苦。这事实上就是因为编程里面的知识，跟过往几乎所有的生活环境运作原理几乎是不匹配的，所以造成无法理解，而大量调用大脑资源匹配、思考，结果却一无所返的情况下，造成意志为崩溃。很多人学习编程事实上是被一堆所谓枯燥的基础知识，所吓跑的。老手觉得基础知识是很重要的，但基础知识恰恰对许多新手来说，是无法理解的。
如果一个人，带球的同时还要思考踢球的角度和速度，不太可能成为一个优秀的足球选手。像这样的低层次过程必须不假思索，才能给更高层次的过程，比如战术策略提供足够空间。正因为我们的工作记忆之狭小，如果你将大量需要调用的资源放在工作记忆，那么大脑就会撰间寸步难行。就如同这个足球选手来说，如果他要一边思考踢球角度和速度，那么下场不但不只是无法射门，甚至可能是跌倒。多半优秀的足球选手进行射门，往往是凭直觉判断，感觉角度对了，场上有空档，直接踢出一个漂亮弧度的球，射门成功。这个直觉，往往就是深焊在肌肉里面的长期记忆。而一般人所谓的学习，事实上是在将新东西存在短期记忆中，进行理解的连结。再透过反覆的练习，往下放置在长期记忆中。
题海战术以及填鸭教育，有时是必须的、
在过去我们的应试教育中，因为我们大量的被灌输填鸭教育以及题海，以至于我们痛恨题海战术以及填鸭教育。所以，往往对于肌肉的记忆练习术这件事十分不苟同。甚至是，因为我们对于题海战术过于痛恨，甚至得到了相反的结论：我们未来教育学生，必须使用理解型教育这个甚至看似正确，但事实上是谬误的决策。注意啊。在前面我讲理解实际上是记忆的相关连结。如果你的大脑，从来未曾存在相关记忆，那么又如何理解。又比如说，你如何让幼儿理解7X8=56;中学生理解e = mc2;想学编程的大学生，理解git的repositroy机制。答案是：你不能。因为事实上他们就没有这样的相关记忆可以去做涟结。所以你只能让他们硬背，直接先锁在记忆区里面。等待将来更有意义的相关材料，进一步的将这些硬背的东西，锁到更深的地方。
右脑模式开始探索整休框架
如果编程是你这辈子从未碰触过的学问，那么按照大脑最容易入门的方式，其实就是：不要强求自己用眼睛，甚至不用大脑去理解，把左脑模式关掉、尽量的摸索一个外围框架，在大脑深处种下记忆点。(比如说你只要知道输入什么，然后可以得到若干输出就好了。如果你连什么是有效的外围框架都不知道。不如直接付费去上新手班，从教练身上学一个一个外围高频套路，可以少掉很多坑。
透过肌肉的练习，把这些记忆点种到肌肉里面。(打错字不再犯，无法理解但常用的都先背起来)、形成了一个防摔记忆层后，再用左脑去分析自己未来想知道更多的东西、一层一层的用「已知解释已知」。当然在这当中要保持开心、有成就感，不妨完成一个小作品后，就扔上网给那些也不懂编程的朋友看一下，得到他们的赞美。唯有充满成就感的学习，才是初学状态最重要的。有成就感的进步，才容易形成习惯回路。这一路写下来，相信你开始可以理解，为什么社会上政治正确的这些常识：
学习编程必须要有天赋
必须在学习编程中看懂每一个步骤
学习必须要扎实，要从技术基础原理学起
学习当中禁止使用捷径，如复制代码

是有多么毒的吧!如果按照社会上这套常识思路者从入门到放弃根本就是99%可以预期的结果